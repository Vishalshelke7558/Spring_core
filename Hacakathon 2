---------------------------------------------Controller

package com.example.demo8.Controller;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo8.Service.EmployeeService;

import com.example.demo8.model.Employee;

@RestController
@RequestMapping("/employee")
public class EmployeeController {

	@Autowired
	EmployeeService employeeService;
	
	@PostMapping
	public ResponseEntity<Employee> saveEmployee(@RequestBody Employee employee)
	{
		if(employee.getEmailId() == null || employee.getName() == null || employee.getSalary() == 0)
		{
			
			return new ResponseEntity<Employee>(HttpStatus.BAD_REQUEST);
		}
		employeeService.saveEmployee(employee);
		return new ResponseEntity<Employee>(employee,HttpStatus.CREATED);
	}
	
	
	
	
	
	@GetMapping
	public ResponseEntity<List<Employee>> getAllemployees()
	{
		List<Employee> lst_1 = employeeService.getAllempEmployee();
		if(lst_1.isEmpty())
		{
			return new ResponseEntity<List<Employee>>(HttpStatus.NOT_FOUND);
		}
		return new ResponseEntity<List<Employee>>(lst_1,HttpStatus.FOUND);
		
	}
	
	
	
	
	
	@GetMapping("{employeeId}")
	public ResponseEntity<Optional<Employee>> getEmployeeById(@PathVariable int employeeId)
	{
		Optional<Employee> emp = employeeService.getEmployeeById(employeeId);
		if(emp != null)
		{
			return new ResponseEntity<Optional<Employee>>(emp,HttpStatus.FOUND);
		}
		return new ResponseEntity<Optional<Employee>>(HttpStatus.NOT_FOUND);
	}
	
	
	
	@DeleteMapping("{employeeId}")
	public ResponseEntity<String> deleteEmployeeById(@PathVariable int employeeId)
	{
		Optional<Employee> emp = employeeService.getEmployeeById(employeeId);
		if(emp != null)
		{
			employeeService.deleteById(employeeId);
			return new ResponseEntity<String>(HttpStatus.OK);
		}
		return new ResponseEntity<String>(HttpStatus.NOT_FOUND);
	}
	
	
	
	@DeleteMapping
	public ResponseEntity<HttpStatus> deleteAll()
	{
		List<Employee> lst = employeeService.getAllempEmployee();
		if(lst.isEmpty())
		{
			return new ResponseEntity<HttpStatus>(HttpStatus.NOT_FOUND);
		}
		employeeService.deleteAll();
		return new ResponseEntity<HttpStatus>(HttpStatus.OK);
	}
	
	
	@PutMapping
	public ResponseEntity<Employee> updateEmployee(@RequestBody Employee employee)
	{
		int empID = employee.getEmployeeId();
		Optional<Employee> emp = employeeService.getEmployeeById(empID);
		if(emp != null)
		{
			Employee emp_1 = employeeService.updateEmployee(employee);
			return new ResponseEntity<Employee>(emp_1,HttpStatus.OK);
		}
		return new ResponseEntity<Employee>(HttpStatus.NOT_FOUND);
		
	}
}




---------------------------------------------------------Service
package com.example.demo8.Service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.demo8.deo.EmployeeDeo;
import com.example.demo8.model.Employee;

@Service
public class EmployeeService {
	
	@Autowired
	EmployeeDeo employeeDeo;
	
	public Employee saveEmployee(Employee employee)
	{
		return employeeDeo.save(employee);
	}
	
	
	public List<Employee> getAllempEmployee()
	{
		//List<Employee> lst = (List<Employee>) employeeDeo.findAll();
		return (List<Employee>) employeeDeo.findAll();
	}

	
	public Optional<Employee> getEmployeeById(int employeeId)
	{
		if(employeeDeo.existsById(employeeId))
		{
			return employeeDeo.findById(employeeId);
		}
		return null;
	}
	
	
	public void deleteById(int employeeId)
	{
		
		employeeDeo.deleteById(employeeId);
	}
	
	
	
	
	public void deleteAll()
	{
		employeeDeo.deleteAll();
	}
	
	
	public Employee updateEmployee(Employee employee)
	{
		return employeeDeo.save(employee);
	}
}













-----------------------------------------------Entity
package com.example.demo8.model;

import javax.persistence.Entity;
import javax.persistence.Id;

@Entity
public class Employee {
	
	@Id
	public int employeeId;
	public String emailId;
	public String name;
	public int salary;
	public int getEmployeeId() {
		return employeeId;
	}
	public void setEmployeeId(int employeeId) {
		this.employeeId = employeeId;
	}
	public String getEmailId() {
		return emailId;
	}
	public void setEmailId(String emailId) {
		this.emailId = emailId;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public int getSalary() {
		return salary;
	}
	public void setSalary(int salary) {
		this.salary = salary;
	}
	
	
	

}
