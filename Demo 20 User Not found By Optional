--------------------------------userService
package com.example.demo6.service;

import java.util.List;

import org.springframework.stereotype.Service;

import com.example.demo6.model.User;
@Service
public interface UserService {
      public User saveUser(User user);
      
      public List<User> getAllUser();
      
      public User getUserById(int UserId);
}




-----------------------------------------------userServiceImpl
package com.example.demo6.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.demo6.dao.Userdto;
import com.example.demo6.model.User;

@Service
public class UserServiceImpl implements UserService {

	@Autowired
	Userdto userdto;
	
	@Override
	public User saveUser(User user) {
		
		return userdto.save(user);
	}

	@Override
	public List<User> getAllUser() {
		
		return (List<User>) userdto.findAll();
	}

	@Override
	public User getUserById(int UserId) {
		
		Optional<User> optionaluser = userdto.findById(UserId); 
		if(optionaluser.isPresent())
		{
			return optionaluser.get();
		}
		return null;
	}

}




----------------------------------------UserController
package com.example.demo6.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo6.model.AuthorModel;
import com.example.demo6.model.User;
import com.example.demo6.service.UserService;

@RestController
@RequestMapping("/user")
public class UserController {
	
	@Autowired
	UserService userService;
	
  @PostMapping
public ResponseEntity<User>saveUser(@RequestBody User user)
{
	  User savedUser = userService.saveUser(user);
	  return new ResponseEntity<User>(savedUser,HttpStatus.CREATED);
}
  
  
  
  @GetMapping
  public ResponseEntity<List<User>> getAllUser()
  {
	  List<User> users = userService.getAllUser();
	  return new ResponseEntity<List<User>>(users,HttpStatus.FOUND);
  }
  
  @GetMapping("{userId}")
  public ResponseEntity<Object> getUserById(@PathVariable int userId)
  {
	  User user = userService.getUserById(userId);
	  if(user != null)
	  {
		  return new ResponseEntity<Object>(user,HttpStatus.FOUND);
	  }
	  return new ResponseEntity<Object>("User Not Found",HttpStatus.NOT_FOUND);
  }
  
 
  
  
  
}


