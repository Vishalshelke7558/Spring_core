---------------------------------Service

package com.example.demo7.Service;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;

import com.example.demo7.dao.Studentdao;
import com.example.demo7.model.Student;

@Service
public class StudentService {

	@Autowired
	Studentdao studentdao;
	
	public Student saveStudent(Student student)
	{
		return studentdao.save(student);
	}
	
	
	public Optional<Student> getStudentById(int StudentId)
	{
		if(studentdao.existsById(StudentId))
		{
			return studentdao.findById(StudentId);
		}
		return null;
	}
	
	public void deleteStudent(int studentId)
	{
		
		studentdao.deleteById(studentId);
	}
}






--------------------------------------Controller
package com.example.demo7.controller;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo7.Service.StudentService;
import com.example.demo7.dao.Studentdao;
import com.example.demo7.model.Student;

@RestController
@RequestMapping("/student")
public class studentController {

	@Autowired
	StudentService studentService;
	
	@PostMapping
	public ResponseEntity<Student> saveStudent(@RequestBody Student student)
	{
		if(student.studentName != null)
		{
		Student student_1 = studentService.saveStudent(student);
		return new ResponseEntity<Student>(student_1,HttpStatus.OK);
		}
		return new ResponseEntity<Student>(HttpStatus.NOT_FOUND);
	}
	
	@GetMapping("{studentId}")
	public ResponseEntity<Optional<Student>> getStudentById(@PathVariable int studentId)
	{
		Optional<Student> student = studentService.getStudentById(studentId);
		if(student != null)
		{
			return new ResponseEntity<Optional<Student>>(student,HttpStatus.OK);
		}
		return new ResponseEntity<Optional<Student>>(HttpStatus.NOT_FOUND);
	}
	
	@DeleteMapping("{studentId}")
	public ResponseEntity<String> deleteStudentById(@PathVariable int studentId)
	{
		Optional<Student> student = studentService.getStudentById(studentId);
		if(student != null)
		{
			studentService.deleteStudent(studentId);
			return new ResponseEntity<String>("Student deleted",HttpStatus.OK);
		}
		return new ResponseEntity<String>(HttpStatus.NOT_FOUND);
	}
}
