-----------service

package com.example.wiprob5h2crud.service;

import java.util.List;

import org.springframework.stereotype.Service;

import com.example.wiprob5h2crud.model.Author;

@Service
public interface AuthorService {
	
	public Author saveAuthor(Author author);
	
	public List<Author> getAllAuthors();
	
	
	public Author getAuthor(int authorId);
	
}


--------------impl 


package com.example.wiprob5h2crud.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.wiprob5h2crud.dao.AuthorDao;
import com.example.wiprob5h2crud.model.Author;
@Service
public class AuthorImpl implements AuthorService{

	@Autowired
	AuthorDao authorDao;
	
	@Override
	public Author saveAuthor(Author author) {
		
	String name=	nameGenerator(author.getAuthorName());
	author.setAuthorName(name);
		return authorDao.save(author);
	}

	
	
	public String nameGenerator(String name)
	{
		
		return name.toUpperCase();
	}



	@Override
	public List<Author> getAllAuthors() {
		
		return (List<Author>) authorDao.findAll();
	}
	
	@Override
	public Author getAuthor(int authorId)
	{
		return authorDao.findById(authorId).get();
	}
}


--------------controller


package com.example.wiprob5h2crud.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.wiprob5h2crud.model.Author;
import com.example.wiprob5h2crud.service.AuthorService;

@RestController
@RequestMapping("authors")
public class AuthorController {

	@Autowired
	AuthorService authorService;
	
	@PostMapping
	public ResponseEntity<Author> saveAuthor(@RequestBody Author author)
	{
		
	Author savedAuthor=authorService.saveAuthor(author);
	
		return new ResponseEntity<Author>(savedAuthor,HttpStatus.CREATED);
		
	}
	
	
	@GetMapping
	public ResponseEntity<List<Author>> getAuthors()
	{
		
	List<Author> authors=authorService.getAllAuthors();
	
		return new ResponseEntity<List<Author>>(authors,HttpStatus.FOUND);
		
	}
	
	@GetMapping("{authorId}")
	public ResponseEntity<Author> getAuthor(@PathVariable int authorId)
	{
		
	Author author=authorService.getAuthor(authorId);
	
		return new ResponseEntity<Author>(author,HttpStatus.FOUND);
		
	}
	
	
	
}
